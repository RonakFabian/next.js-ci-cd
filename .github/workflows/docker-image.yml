name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: dev

    permissions:
      contents: read
      packages: write

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Set up Node.js for linting and tests
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ./webapp/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('webapp/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        working-directory: ./webapp

      # 4️⃣ Optional: Run ESLint
      - name: Lint code
        run: npm run lint
        working-directory: ./webapp

      # # 5️⃣ Optional: Run tests
      # - name: Run tests
      #   run: npm test
      #   working-directory: ./webapp

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Print REPO_NAME
        run: echo "REPO_NAME=${{ env.REPO_NAME }}"

      - name: Build and push Docker image
        run: docker build -t ${{ env.REPO_NAME }}:latest ./webapp

      - name: Scan Docker image
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ env.REPO_NAME }}:latest

      - name: Build and push Docker image
        run: |
          docker push ${{ env.REPO_NAME }}:latest
          docker tag ${{ env.REPO_NAME }}:latest ${{ env.REPO_NAME }}:${{ github.sha }}
          docker push ${{ env.REPO_NAME }}:${{ github.sha }}
